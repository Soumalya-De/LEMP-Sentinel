name: Nightly Trivy scan

on:
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Trivy
        run: |
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Build images for scanning
        run: |
          docker compose build --pull

      - name: Run Trivy on local images and upload results
        run: |
          mkdir -p trivy-reports
          scan_rc=0
          for img in $(docker images --format '{{.Repository}}:{{.Tag}}' | grep -E 'nginx:|php:' | sort -u); do
            safe=$(echo "$img" | sed 's/[^A-Za-z0-9._-]/_/g')
            out=trivy-reports/${safe}.sarif
            echo "Scanning $img -> $out"
            trivy image --format sarif --severity HIGH,CRITICAL --output "$out" --no-progress --timeout 5m "$img" || scan_rc=$?
          done
          tar -czf trivy-reports.tgz trivy-reports || true

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: trivy-reports.tgz

      - name: Create issue if critical findings exist
        run: |
          if [ -n "$(grep -R "CRITICAL" trivy-reports 2>/dev/null || true)" ]; then
            echo "Critical findings exist. Creating issue via REST API."
            body="Trivy found CRITICAL vulnerabilities in nightly image scan. See attached trivy-reports artifact."
            curl -s -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/issues -d "$(jq -n --arg t "Nightly: Critical vulnerabilities found in built images" --arg b "$body" '{title:$t, body:$b}')" || true
          else
            echo "No critical vulnerabilities found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
